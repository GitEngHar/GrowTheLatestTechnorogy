apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
spec:
  selector:
    matchLabels:
      run: load-balancer-example
  replicas: 2
  template:
    metadata:
      labels:
        run: load-balancer-example
    spec:
      containers:
        - name: hello-world
          image: gcr.io/google-samples/node-hello:1.0
          ports:
            - containerPort: 8080
              protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-03-11T07:01:03Z"
  name: example-service
  namespace: default
  resourceVersion: "5482"
  uid: 7c62f8da-6cbe-4f7b-b058-200929094fb3
spec:
  clusterIP: 10.98.231.55
  clusterIPs:
  - 10.98.231.55
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 32321
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: load-balancer-example
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer:
    ingress:
    - hostname: localhost

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-dep
spec:
  selector:
    matchLabels:
      run: nginx-balancer
  replicas: 2
  template:
    metadata:
      labels:
        run: nginx-balancer
    spec:
      containers:
        - name: nginx-dep
          image: nginx
          ports:
            - containerPort: 80
              protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: default
spec:
  clusterIP: 10.98.231.60
  clusterIPs:
  - 10.98.231.60
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 30011
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: nginx-balancer
  type: NodePort
status:
  loadBalancer:
    ingress:
    - hostname: localhost
